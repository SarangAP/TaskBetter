{"ast":null,"code":"var _jsxFileName = \"/Users/Snow/Documents/NJIT/Spring_2024/CS491/TaskBetter/task-better/src/Components/Tasks/TaskForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Check if title and description are empty\n    if (title.trim() === '' || description.trim() === '') {\n      console.log('Title and description cannot be empty');\n      // return;\n    }\n    fetch('http://127.0.0.1:8000/tasks/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title,\n        description\n      })\n    }).then(response => response.json()).then(data => {\n      // Handle the response data\n      console.log(data);\n    }).catch(error => {\n      // Handle any errors\n      console.error(error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"title\",\n          placeholder: \"Title\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          id: \"description\",\n          placeholder: \"Description\",\n          value: description,\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskForm, \"1UKQWTfo2RWmkwPNsekAdQbvqFk=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskForm","_s","title","setTitle","description","setDescription","handleSubmit","e","preventDefault","trim","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","data","catch","error","children","onSubmit","className","type","id","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Snow/Documents/NJIT/Spring_2024/CS491/TaskBetter/task-better/src/Components/Tasks/TaskForm.jsx"],"sourcesContent":["\n\nimport React, { useState } from 'react';\n\nconst TaskForm = () => {\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n            // Check if title and description are empty\n            if (title.trim() === '' || description.trim() === '') {\n                console.log('Title and description cannot be empty');\n                // return;\n            }\n        \n        fetch('http://127.0.0.1:8000/tasks/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ title, description }),\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                // Handle the response data\n                console.log(data);\n            })\n            .catch((error) => {\n                // Handle any errors\n                console.error(error);\n            });\n    };\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <div className=\"mb-3\">\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"title\"\n                        placeholder=\"Title\"\n                        value={title}\n                        onChange={(e) => setTitle(e.target.value)}\n                    />\n                </div>\n                <div className=\"mb-3\">\n                    <textarea\n                        className=\"form-control\"\n                        id=\"description\"\n                        placeholder=\"Description\"\n                        value={description}\n                        onChange={(e) => setDescription(e.target.value)}\n                    ></textarea>\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">\n                    Submit\n                </button>\n            </form>\n        </div>\n    );\n};\n\nexport default TaskForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}