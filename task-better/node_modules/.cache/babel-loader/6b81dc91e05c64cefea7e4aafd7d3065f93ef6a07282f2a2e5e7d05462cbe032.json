{"ast":null,"code":"var _jsxFileName = \"/Users/Snow/Documents/NJIT/Spring_2024/CS491/TaskBetter/task-better/src/Components/Tasks/TaskPage.jsx\";\nimport React from 'react';\nimport TaskForm from './TaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskPage = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    style: {\n      backgroundColor: '#A1D0D0',\n      fontFamily: 'Lexend Exa, sans-serif'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Task Better\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(TaskForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: ['Create Form', 'Create Tasks'].map((task, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [index === 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [task, \"This is a description of the task\"]\n          }, void 0, true), index !== 1 && task, ' \\u25BC']\n        }, void 0, true))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = TaskPage;\nexport default TaskPage;\nvar _c;\n$RefreshReg$(_c, \"TaskPage\");","map":{"version":3,"names":["React","TaskForm","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskPage","className","style","backgroundColor","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","map","task","index","_c","$RefreshReg$"],"sources":["/Users/Snow/Documents/NJIT/Spring_2024/CS491/TaskBetter/task-better/src/Components/Tasks/TaskPage.jsx"],"sourcesContent":["import React from 'react';\nimport TaskForm from './TaskForm';\n\nconst TaskPage = () => {\n  return (\n    <div className=\"container-fluid\" style={{ backgroundColor: '#A1D0D0', fontFamily: 'Lexend Exa, sans-serif'}}>\n      <div className=\"row\">\n        <div className='col'>\n      <h1>Task Better</h1>\n\n        </div>\n        <div className=\"col-md-6\">\n            <TaskForm/>\n        </div>\n\n        <div className='col-md-6'>\n          {/* This part can be made dynamic by mapping over an array of tasks */}\n          {/* Each task would be a component */}\n          {/* For simplicity, I'm hardcoding the tasks here */}\n          \n          {/* Task Component Example */}\n          {/* You should create a separate Task component file for this and import it here */}\n          \n          {/* Start of Task Component */}\n          \n          {['Create Form', 'Create Tasks'].map((task, index) => (\n            <>\n              {index === 1 && \n                <>\n                  {task}\n                  This is a description of the task\n                </>\n              }\n              \n              {index !== 1 && \n                task\n              }\n              \n              {/* Dropdown arrow icon - you can replace this with an actual icon component or element */}\n              {' \\u25BC'}\n              \n            </>\n           ))}\n           \n           {/* End of Task Component */}\n\n        </div>\n\n      </div>\n    </div>\n  );\n};\n\nexport default TaskPage;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACrB,oBACEH,OAAA;IAAKI,SAAS,EAAC,iBAAiB;IAACC,KAAK,EAAE;MAAEC,eAAe,EAAE,SAAS;MAAEC,UAAU,EAAE;IAAwB,CAAE;IAAAC,QAAA,eAC1GR,OAAA;MAAKI,SAAS,EAAC,KAAK;MAAAI,QAAA,gBAClBR,OAAA;QAAKI,SAAS,EAAC,KAAK;QAAAI,QAAA,eACtBR,OAAA;UAAAQ,QAAA,EAAI;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CAAC,eACNZ,OAAA;QAAKI,SAAS,EAAC,UAAU;QAAAI,QAAA,eACrBR,OAAA,CAACF,QAAQ;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC,eAENZ,OAAA;QAAKI,SAAS,EAAC,UAAU;QAAAI,QAAA,EAUtB,CAAC,aAAa,EAAE,cAAc,CAAC,CAACK,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC/Cf,OAAA,CAAAE,SAAA;UAAAM,QAAA,GACGO,KAAK,KAAK,CAAC,iBACVf,OAAA,CAAAE,SAAA;YAAAM,QAAA,GACGM,IAAI,EAAC,mCAER;UAAA,eAAE,CAAC,EAGJC,KAAK,KAAK,CAAC,IACVD,IAAI,EAIL,SAAS;QAAA,eAEV,CACF;MAAC;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACI,EAAA,GAhDIb,QAAQ;AAkDd,eAAeA,QAAQ;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}